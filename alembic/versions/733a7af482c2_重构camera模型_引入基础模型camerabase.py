"""重构Camera模型，引入基础模型CameraBase

Revision ID: 733a7af482c2
Revises: eee83992cf7d
Create Date: 2025-07-12 00:40:23.831709

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '733a7af482c2'
down_revision: Union[str, None] = 'eee83992cf7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('article', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('article', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('article', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('article', 'title',
               existing_type=mysql.VARCHAR(length=200),
               nullable=True)
    op.alter_column('article', 'slug',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('article', 'content',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('article', 'status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=True)
    op.create_foreign_key(None, 'article', 'user', ['created_by'], ['id'])
    op.add_column('articletaglink', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('articletaglink', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('articletaglink', sa.Column('created_by', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'articletaglink', 'user', ['created_by'], ['id'])
    op.add_column('brand', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('brand', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.drop_index('name', table_name='brand')
    op.create_index(op.f('ix_brand_name'), 'brand', ['name'], unique=True)
    op.create_foreign_key(None, 'brand', 'user', ['created_by'], ['id'])
    op.add_column('brandmountlink', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('brandmountlink', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('brandmountlink', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('brandmountlink', sa.Column('is_primary', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_brandmountlink_brand_id'), 'brandmountlink', ['brand_id'], unique=False)
    op.create_index(op.f('ix_brandmountlink_mount_id'), 'brandmountlink', ['mount_id'], unique=False)
    op.create_foreign_key(None, 'brandmountlink', 'user', ['created_by'], ['id'])
    op.add_column('camera', sa.Column('name', sa.String(length=200), nullable=True))
    op.add_column('camera', sa.Column('name_zh', sa.String(length=200), nullable=True))
    op.add_column('camera', sa.Column('model_code', sa.String(length=50), nullable=True))
    op.add_column('camera', sa.Column('sensor_type', sa.String(length=50), nullable=True))
    op.add_column('camera', sa.Column('resolution', sa.Float(), nullable=True))
    op.add_column('camera', sa.Column('max_iso', sa.Integer(), nullable=True))
    op.add_column('camera', sa.Column('video_resolution', sa.String(length=50), nullable=True))
    op.add_column('camera', sa.Column('body_weight', sa.Integer(), nullable=True))
    op.alter_column('camera', 'brand_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('camera', 'release_year',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.drop_constraint('camera_ibfk_1', 'camera', type_='foreignkey')
    op.drop_constraint('camera_ibfk_3', 'camera', type_='foreignkey')
    op.drop_column('camera', 'weight_grams')
    op.drop_column('camera', 'rating_count')
    op.drop_column('camera', 'model_zh')
    op.drop_column('camera', 'model')
    op.drop_column('camera', 'rating')
    op.drop_column('camera', 'megapixels')
    op.add_column('category', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('category', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('category', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('category', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.alter_column('category', 'slug',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.create_foreign_key(None, 'category', 'user', ['created_by'], ['id'])
    op.add_column('comment', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('comment', sa.Column('article_id', sa.Integer(), nullable=True))
    op.alter_column('comment', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('comment', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('comment', 'content',
               existing_type=mysql.TEXT(),
               nullable=True)
    op.alter_column('comment', 'author_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.create_foreign_key(None, 'comment', 'user', ['created_by'], ['id'])
    op.create_foreign_key(None, 'comment', 'article', ['article_id'], ['id'])
    op.add_column('lens', sa.Column('aperture_range', sa.String(length=50), nullable=True))
    op.add_column('lens', sa.Column('mount_id', sa.Integer(), nullable=True))
    op.add_column('lens', sa.Column('min_focus_distance', sa.Float(), nullable=True))
    op.add_column('lens', sa.Column('max_aperture', sa.Float(), nullable=True))
    op.alter_column('lens', 'model',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.alter_column('lens', 'focal_length',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.create_foreign_key(None, 'lens', 'mount', ['mount_id'], ['id'])
    op.drop_column('lens', 'aperture')
    op.drop_column('lens', 'filter_size')
    op.drop_column('lens', 'release_year')
    op.add_column('lensmountlink', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('lensmountlink', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('lensmountlink', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('lensmountlink', sa.Column('is_primary', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_lensmountlink_lens_id'), 'lensmountlink', ['lens_id'], unique=False)
    op.create_index(op.f('ix_lensmountlink_mount_id'), 'lensmountlink', ['mount_id'], unique=False)
    op.create_foreign_key(None, 'lensmountlink', 'user', ['created_by'], ['id'])
    op.add_column('mount', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('mount', sa.Column('name_zh', sa.String(length=100), nullable=True))
    op.alter_column('mount', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)
    op.create_foreign_key(None, 'mount', 'user', ['created_by'], ['id'])
    op.add_column('tag', sa.Column('updated_at', sa.DateTime(), nullable=True))
    op.add_column('tag', sa.Column('created_by', sa.Integer(), nullable=True))
    op.alter_column('tag', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('tag', 'name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.alter_column('tag', 'slug',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.create_foreign_key(None, 'tag', 'user', ['created_by'], ['id'])
    op.add_column('user', sa.Column('created_by', sa.Integer(), nullable=True))
    op.add_column('user', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('user', sa.Column('is_staff', sa.Boolean(), nullable=False))
    op.alter_column('user', 'username',
               existing_type=mysql.VARCHAR(length=50),
               nullable=True)
    op.alter_column('user', 'email',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=100),
               nullable=True)
    op.alter_column('user', 'password_hash',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.create_foreign_key(None, 'user', 'user', ['created_by'], ['id'])
    op.drop_column('user', 'avatar_url')
    op.drop_column('user', 'last_login')
    op.drop_column('user', 'bio')
    op.drop_column('user', 'role')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('role', mysql.VARCHAR(length=20), nullable=False))
    op.add_column('user', sa.Column('bio', mysql.VARCHAR(length=500), nullable=True))
    op.add_column('user', sa.Column('last_login', mysql.DATETIME(), nullable=True))
    op.add_column('user', sa.Column('avatar_url', mysql.VARCHAR(length=255), nullable=True))
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.alter_column('user', 'password_hash',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'email',
               existing_type=sa.String(length=100),
               type_=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('user', 'username',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.drop_column('user', 'is_staff')
    op.drop_column('user', 'is_active')
    op.drop_column('user', 'created_by')
    op.drop_constraint(None, 'tag', type_='foreignkey')
    op.alter_column('tag', 'slug',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.alter_column('tag', 'name',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.alter_column('tag', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.drop_column('tag', 'created_by')
    op.drop_column('tag', 'updated_at')
    op.drop_constraint(None, 'mount', type_='foreignkey')
    op.alter_column('mount', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.drop_column('mount', 'name_zh')
    op.drop_column('mount', 'created_by')
    op.drop_constraint(None, 'lensmountlink', type_='foreignkey')
    op.drop_index(op.f('ix_lensmountlink_mount_id'), table_name='lensmountlink')
    op.drop_index(op.f('ix_lensmountlink_lens_id'), table_name='lensmountlink')
    op.drop_column('lensmountlink', 'is_primary')
    op.drop_column('lensmountlink', 'created_by')
    op.drop_column('lensmountlink', 'updated_at')
    op.drop_column('lensmountlink', 'created_at')
    op.add_column('lens', sa.Column('release_year', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('lens', sa.Column('filter_size', mysql.FLOAT(), nullable=True))
    op.add_column('lens', sa.Column('aperture', mysql.VARCHAR(length=50), nullable=False))
    op.drop_constraint(None, 'lens', type_='foreignkey')
    op.alter_column('lens', 'focal_length',
               existing_type=mysql.VARCHAR(length=50),
               nullable=False)
    op.alter_column('lens', 'model',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.drop_column('lens', 'max_aperture')
    op.drop_column('lens', 'min_focus_distance')
    op.drop_column('lens', 'mount_id')
    op.drop_column('lens', 'aperture_range')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.drop_constraint(None, 'comment', type_='foreignkey')
    op.alter_column('comment', 'author_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.alter_column('comment', 'content',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('comment', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('comment', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.drop_column('comment', 'article_id')
    op.drop_column('comment', 'created_by')
    op.drop_constraint(None, 'category', type_='foreignkey')
    op.alter_column('category', 'slug',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.alter_column('category', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.alter_column('category', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('category', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.drop_column('category', 'created_by')
    op.add_column('camera', sa.Column('megapixels', mysql.FLOAT(), nullable=True))
    op.add_column('camera', sa.Column('rating', mysql.DECIMAL(precision=2, scale=1), nullable=True))
    op.add_column('camera', sa.Column('model', mysql.VARCHAR(length=100), nullable=False))
    op.add_column('camera', sa.Column('model_zh', mysql.VARCHAR(length=100), nullable=True))
    op.add_column('camera', sa.Column('rating_count', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.add_column('camera', sa.Column('weight_grams', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.create_foreign_key('camera_ibfk_3', 'camera', 'mount', ['mount_id'], ['id'])
    op.create_foreign_key('camera_ibfk_1', 'camera', 'brand', ['brand_id'], ['id'])
    op.alter_column('camera', 'release_year',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column('camera', 'brand_id',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.drop_column('camera', 'body_weight')
    op.drop_column('camera', 'video_resolution')
    op.drop_column('camera', 'max_iso')
    op.drop_column('camera', 'resolution')
    op.drop_column('camera', 'sensor_type')
    op.drop_column('camera', 'model_code')
    op.drop_column('camera', 'name_zh')
    op.drop_column('camera', 'name')
    op.drop_constraint(None, 'brandmountlink', type_='foreignkey')
    op.drop_index(op.f('ix_brandmountlink_mount_id'), table_name='brandmountlink')
    op.drop_index(op.f('ix_brandmountlink_brand_id'), table_name='brandmountlink')
    op.drop_column('brandmountlink', 'is_primary')
    op.drop_column('brandmountlink', 'created_by')
    op.drop_column('brandmountlink', 'updated_at')
    op.drop_column('brandmountlink', 'created_at')
    op.drop_constraint(None, 'brand', type_='foreignkey')
    op.drop_index(op.f('ix_brand_name'), table_name='brand')
    op.create_index('name', 'brand', ['name'], unique=True)
    op.alter_column('brand', 'name',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
    op.drop_column('brand', 'created_by')
    op.drop_constraint(None, 'articletaglink', type_='foreignkey')
    op.drop_column('articletaglink', 'created_by')
    op.drop_column('articletaglink', 'updated_at')
    op.drop_column('articletaglink', 'created_at')
    op.drop_constraint(None, 'article', type_='foreignkey')
    op.alter_column('article', 'status',
               existing_type=mysql.VARCHAR(length=20),
               nullable=False)
    op.alter_column('article', 'content',
               existing_type=mysql.TEXT(),
               nullable=False)
    op.alter_column('article', 'slug',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('article', 'title',
               existing_type=mysql.VARCHAR(length=200),
               nullable=False)
    op.alter_column('article', 'updated_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('article', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.drop_column('article', 'created_by')
    # ### end Alembic commands ###
