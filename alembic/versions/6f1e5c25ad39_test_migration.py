"""test_migration

Revision ID: 6f1e5c25ad39
Revises: 
Create Date: 2025-05-07 11:50:58.987766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '6f1e5c25ad39'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('name_zh', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('mount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('flange_distance', sa.Float(), nullable=True),
    sa.Column('diameter', sa.Float(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('camera',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('model_zh', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('mount_id', sa.Integer(), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('sensor_size', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('megapixels', sa.Float(), nullable=True),
    sa.Column('iso_range', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('shutter_speed', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('weight_grams', sa.Integer(), nullable=True),
    sa.Column('dimensions', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['mount_id'], ['mount.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('model_zh', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('brand_id', sa.Integer(), nullable=True),
    sa.Column('mount_id', sa.Integer(), nullable=True),
    sa.Column('release_year', sa.Integer(), nullable=True),
    sa.Column('focal_length', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('aperture', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('lens_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('filter_size', sa.Float(), nullable=True),
    sa.Column('weight_grams', sa.Integer(), nullable=True),
    sa.Column('dimensions', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['mount_id'], ['mount.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lens')
    op.drop_table('camera')
    op.drop_table('mount')
    op.drop_table('user')
    op.drop_table('brand')
    # ### end Alembic commands ###
